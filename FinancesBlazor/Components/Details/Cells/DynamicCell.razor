@using DataSource;
@using DataViews;

<div>
    <DynamicComponent Type="@(GetCellComponent())" Parameters="@(new Dictionary<string, object?>() { { "DataView", @DataView }, { "Row", @Row}, { "Column", @Column}})" />
</div>

@code {
    [Parameter]
    public DataView? DataView { get; set; }

    [Parameter]
    public DataRow? Row { get; set; }

    [Parameter]
    public DataViewColumn? Column { get; set; }

    private Type GetCellComponent()
        => Column?.DataType switch
        {
            DataViewColumnDataType.Text => typeof(TextCell),
            DataViewColumnDataType.Date => typeof(DateCell),
            DataViewColumnDataType.Amount => typeof(AmountCell),
            DataViewColumnDataType.Precision => typeof(PrecisionCell),
            DataViewColumnDataType.DocumentLink => typeof(DocumentLinkCell),
            DataViewColumnDataType.Number => typeof(NumberCell),
            DataViewColumnDataType.GroupSubquery => typeof(GroupSubqueryCell),
            _ => throw new InvalidOperationException($"Unknown cell component for type {Column?.DataType}")
        };
}
