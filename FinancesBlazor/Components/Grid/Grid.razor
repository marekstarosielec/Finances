@using DataViews;
@using FinancesBlazor.Components.Grid.Filters;
@using System.Text.Json.Nodes;
@using FinancesBlazor.Components.Grid.Rows
@using FinancesBlazor.Components.Spinner;
@using Radzen.Blazor.Rendering;
@inject DataViewManager _dataViewManager;
@implements IDisposable;

@if (DataView?.IsLoading != false)
{
    <Spinner></Spinner>
}
else
{
    @if (DataView?.Presentation?.ShowToolbar == true)
    {
        <Toolbar DataView=DataView></Toolbar>
    }
    <table class="table table-borderless">
        @if (DataView?.Presentation?.ShowHeaders == true)
        {
            <thead>
                <tr>
                    <th></th>
                    @foreach (var column in DataView.Columns.Where(c => c.Visible))
                    {
                        <th>
                            <div class="@(column.HorizontalAlign == DataViewColumnContentAlign.Right ? "text-end dropdown" : "dropdown")">
                                <button class="btn columnHeader" type="button" @ref=_popupInvokers[column] @onclick="@(args => ToggleFilter(column))">@column.Title <span hidden="@ColumnHeaderArrowHidden(column, true)"><span class="fa fa-arrow-down blue"></span></span><span hidden="@ColumnHeaderArrowHidden(column, false)"><span class="fa fa-arrow-up yellow"></span></span></button>
                                <Popup @ref=_popups[column] Lazy=false class="popup" Style="display:none;position:absolute;padding:5px;border:1px">
                                    <DynamicFilter DataView=@DataView Column=column @ref=_dynamicFilters[column] Popup="@_popups[column]" ElementReference="@_popupInvokers[column]" />
                                </Popup>
                            </div>
                        </th>
                    }
                </tr>
        </thead>
        }
        <tbody>
            @if (DataView?.Result?.Rows != null)
            {
                @foreach (var row in DataView.Result.Rows)
                {
                    <DynamicRow DataView=@DataView Row=@row></DynamicRow>
                }
            }
        </tbody>
    </table>
    @if (DataView?.Result != null && DataView.Result.Rows?.Count() < DataView.Result.TotalRowCount)
    {
        <button class="btn btn-primary" @onclick="() => LoadMore()">Wczytaj więcej</button>
    }
}
