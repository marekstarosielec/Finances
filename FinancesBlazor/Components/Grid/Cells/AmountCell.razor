@using DataSource;
@using DataViews;

@inject DataViewManager _dataViewManager;

<td class="@GetCellStyle()" @onclick="openDialog">@GetCellValue() @GetCurrencyValue()</td>

@code {
    [Parameter]
    public DataView? DataView { get; set; }

    [Parameter]
    public DataRow? Row { get; set; }

    [Parameter]
    public DataViewColumn? Column { get; set; }

    private string GetCellStyle()
    {
        var result = string.Empty;
        if (Column == null)
            return result;

        if (Column.HorizontalAlign == DataViewColumnContentAlign.Right)
            result += "text-end ";
        result += "text-nowrap ";

        var value = Row?[Column.PrimaryDataColumnName].OriginalValue as decimal?;
        if (value == null)
            return result;

        if (value >= 0)
            result += "green ";
        else
            result += "red ";

        return result;
    }

    public string? GetCellValue()
    {
        var result = string.Empty;
        if (Column == null || Row == null)
            return result;

        var value = Row[Column.PrimaryDataColumnName].OriginalValue;
        if (value == null)
            return Column.NullValue;

        return (value as decimal?)?.ToString(Column.Format);
    }

    public string? GetCurrencyValue()
    {
        var result = string.Empty;
        if (Column == null || Row == null)
            return result;

        if (Column.SecondaryDataColumnName == null)
            return "   ";

        var value = Row[Column.SecondaryDataColumnName].OriginalValue;
        if (value == null)
            return "   ";

        return value.ToString();
    }

    void openDialog()
    {
        if (DataView == null || Row == null)
            return;
        var detailsDataView = _dataViewManager.FindViewByName(DataView.GetDetailsDataViewName());
        _dataViewManager.SelectedData.Clear();
        _dataViewManager.SelectedData.Add(detailsDataView, Row);
        _dataViewManager.Save(DataView);
    }
}
