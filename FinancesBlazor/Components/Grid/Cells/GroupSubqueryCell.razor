@using DataSource;
@using DataViews;
@inject DataViewManager _dataViewManager;

<td>
    @if (Column?.PrimaryDataColumnName != null && (Row?[Column.PrimaryDataColumnName]?.CurrentValue as IEnumerable<DataRow>) != null)
    {
        //Find rows that have file name linked.
        var rows = (Row?[Column.PrimaryDataColumnName]?.CurrentValue as IEnumerable<DataRow>)?.Where(r => !string.IsNullOrWhiteSpace(r[GroupDataSource.FileLinkColumnId].CurrentValue as string));
        foreach(var row in rows!)
        {
            <span onclick ="@(() => OnClick(row[GroupDataSource.FileLinkColumnId].CurrentValue as string))">
                <i class="fa-regular fa-file fa-lg" ></i>
            </span>
        } 
    }
</td>

@code {
    [Parameter]
    public DataView? DataView { get; set; }

    [Parameter]
    public DataRow? Row { get; set; }

    [Parameter]
    public DataViewColumn? Column { get; set; }

    private async void OnClick(string? fileName)
    {
        if (string.IsNullOrWhiteSpace(fileName))
            return;

        await _dataViewManager.OpenDocument(fileName);
    }
}
