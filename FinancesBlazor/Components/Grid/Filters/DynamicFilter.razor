@using FinancesBlazor.ViewManager;
@using FinancesBlazor.DataAccess;

@inject ViewManager _viewManager;

@if (Column != null)
{
    <button type="button" class="btn btn-primary btn-sm" @onclick="() => SortClick(false)"><span class="fa fa-arrow-up"></span></button>
    <button type="button" class="btn btn-secondary btn-sm" @onclick="() => SortClick(true)"><span class="fa fa-arrow-down"></span></button>
    @switch (Column.DataType)
    {
       case DataTypes.Text: 
            <TextFilter Column="@Column" /> 
            break;
        case DataTypes.Date:
            <DateFilter Column="@Column" />
            break;
        case DataTypes.Precision:
            <PrecisionFilter Column="@Column" />
            break;
    }
    
}
@code {
    [Parameter]
    public GridColumn? Column { get; set; }

    [Parameter]
    public EventCallback ParametersChanged { get; set; }

    public async Task SortClick(bool descending)
    {
        if (Column == null || _viewManager?.ActiveView?.Parameters == null)
            return;

        _viewManager.ActiveView.Parameters.SortingColumnDataName = Column.Data;
        _viewManager.ActiveView.Parameters.SortingDescending = descending;
        await ParametersChanged.InvokeAsync();
    }
}
