@inject DialogService ds

<RadzenStack Gap="1.5rem">
    <input type="password" id="password" aria-label="password" aria-describedby="password" autocomplete="off" class="@GetValidityStyle()" @oninput="TextChanged" @onkeydown="KeyDown" />
    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <button class="btn btn-secondary" @onclick="Close">Anuluj</button>
        <button class="btn btn-primary" @onclick="Submit">Ok</button>
    </RadzenStack>
</RadzenStack>

@code {
    private string password = string.Empty;
    private bool isValid;
    private bool touched = false;
    private void KeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
            Submit();
        if (e.Code == "Escape")
            Close();
    }

    private void TextChanged(ChangeEventArgs e)
    {
        password = e.Value?.ToString() ?? string.Empty;
    }

    private void Submit()
    {
        touched = true;
        isValid = password.Length == 70;
        if (!isValid)
            return;
        ds.Close(password);
    }

    private void Close()
    {
        ds.Close(null);
    }

    private string GetValidityStyle() => touched && !isValid ? "form-control is-invalid" : string.Empty;
}